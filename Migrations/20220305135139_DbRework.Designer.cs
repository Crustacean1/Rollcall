// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rollcall.Repositories;

#nullable disable

namespace rollcall.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220305135139_DbRework")]
    partial class DbRework
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Rollcall.Models.Child", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Children");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupId = 1,
                            Name = "Kamil",
                            Surname = "Kowalski"
                        });
                });

            modelBuilder.Entity("Rollcall.Models.ChildAttendance", b =>
                {
                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("Attendance")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SchemaId")
                        .HasColumnType("int");

                    b.HasKey("ChildId", "MealId", "Date");

                    b.HasIndex("SchemaId");

                    b.ToTable("ChildAttendance");
                });

            modelBuilder.Entity("Rollcall.Models.DefaultAttendance", b =>
                {
                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<bool>("Attendance")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ChildId", "MealId");

                    b.HasIndex("MealId");

                    b.ToTable("DefaultAttendance");

                    b.HasData(
                        new
                        {
                            ChildId = 1,
                            MealId = 1,
                            Attendance = true
                        },
                        new
                        {
                            ChildId = 1,
                            MealId = 2,
                            Attendance = true
                        },
                        new
                        {
                            ChildId = 1,
                            MealId = 3,
                            Attendance = false
                        });
                });

            modelBuilder.Entity("Rollcall.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AEII"
                        });
                });

            modelBuilder.Entity("Rollcall.Models.GroupAttendance", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("Attendance")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SchemaId")
                        .HasColumnType("int");

                    b.HasKey("GroupId", "MealId", "Date");

                    b.HasIndex("SchemaId");

                    b.ToTable("GroupAttendance");
                });

            modelBuilder.Entity("Rollcall.Models.MealSchema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MealSchemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "breakfast"
                        },
                        new
                        {
                            Id = 2,
                            Name = "dinner"
                        },
                        new
                        {
                            Id = 3,
                            Name = "desert"
                        });
                });

            modelBuilder.Entity("Rollcall.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Rollcall.Models.Child", b =>
                {
                    b.HasOne("Rollcall.Models.Group", "MyGroup")
                        .WithMany("Children")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyGroup");
                });

            modelBuilder.Entity("Rollcall.Models.ChildAttendance", b =>
                {
                    b.HasOne("Rollcall.Models.Child", "TargetChild")
                        .WithMany("MyAttendance")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rollcall.Models.MealSchema", "Schema")
                        .WithMany()
                        .HasForeignKey("SchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");

                    b.Navigation("TargetChild");
                });

            modelBuilder.Entity("Rollcall.Models.DefaultAttendance", b =>
                {
                    b.HasOne("Rollcall.Models.Child", "TargetChild")
                        .WithMany("DefaultMeals")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rollcall.Models.MealSchema", "Schema")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");

                    b.Navigation("TargetChild");
                });

            modelBuilder.Entity("Rollcall.Models.GroupAttendance", b =>
                {
                    b.HasOne("Rollcall.Models.Group", "TargetGroup")
                        .WithMany("Masks")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rollcall.Models.MealSchema", "Schema")
                        .WithMany()
                        .HasForeignKey("SchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");

                    b.Navigation("TargetGroup");
                });

            modelBuilder.Entity("Rollcall.Models.Child", b =>
                {
                    b.Navigation("DefaultMeals");

                    b.Navigation("MyAttendance");
                });

            modelBuilder.Entity("Rollcall.Models.Group", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Masks");
                });
#pragma warning restore 612, 618
        }
    }
}
